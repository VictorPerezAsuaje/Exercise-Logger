// <auto-generated />
using System;
using ExerciseLog.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExerciseLog.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ExerciseLogDbContext))]
    [Migration("20220101224013_AddedBaseExercise")]
    partial class AddedBaseExercise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExerciseLog.Domain.Entities.CalisthenicExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedWeight")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExerciseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<bool>("ExtraWeight")
                        .HasColumnType("bit");

                    b.Property<int>("MeasuredBy")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("CalisthenicExercises");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.DistanceExercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedWeight")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExerciseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<bool>("ExtraWeight")
                        .HasColumnType("bit");

                    b.Property<int>("Meters")
                        .HasColumnType("int");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("DistanceExercises");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("TraineeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.CalisthenicExercise", b =>
                {
                    b.HasOne("ExerciseLog.Domain.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.HasOne("ExerciseLog.Domain.Entities.Trainee", "Trainee")
                        .WithMany("CalistenicExercises")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.DistanceExercise", b =>
                {
                    b.HasOne("ExerciseLog.Domain.Entities.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId");

                    b.HasOne("ExerciseLog.Domain.Entities.Trainee", "Trainee")
                        .WithMany("DistanceExercises")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("ExerciseLog.Domain.Entities.Trainee", b =>
                {
                    b.Navigation("CalistenicExercises");

                    b.Navigation("DistanceExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
